plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.protobuf' version "0.8.12"
    id 'kotlin-kapt'
    id "kotlin-parcelize"
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

def getBartKey = { ->
    try {
        def apikeyPropertiesFile = rootProject.file("apikeys.properties")
        def apikeyProperties = new Properties()
        apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))
        return apikeyProperties['BART_PRIVATE_KEY']
    } catch (ignored) {
        return "\"MW9S-E7SL-26DU-VV8V\""
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.samples"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "BART_KEY", getBartKey())

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_view_version}"
//    implementation "androidx.camera:camera-extensions:${camerax_version}"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"

    implementation 'com.google.android.material:material:1.4.0'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'com.google.mlkit:barcode-scanning:17.0.0'
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:16.3.0'
    implementation "com.google.protobuf:protobuf-javalite:$protobufVersion"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    kapt "androidx.room:room-compiler:$room_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.15.6"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}